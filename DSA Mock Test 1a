Move Zeroes

Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

Example 1:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

Example 2:
Input: nums = [0]
Output: [0]

Constraints:
a. 1 <= nums.length <= 10^4
b. -2^31 <= nums[i] <= 2^31 - 1

Python Code:

def moveZeros(num):
    if not (1 <= len(num) <= 10**4):
        print("Error: Invalid length of num array.")
        

    for n in num:
        if not (-2**31 <= n <= 2**31 - 1):
            print("Error: Invalid value in num array.")
            
    place = 0
    for curr in range(len(num)):
        if num[curr] != 0:
            num[curr], num[place] = num[place], num[curr]
            place += 1
    return num
  
      
num = [0,1,0,3,12]     
result = moveZeros(num)
print("Output:", result) #Output: [1,3,12,0,0]


num = [0]     
result = moveZeros(num)
print("Output:", result) #Output: [0]
