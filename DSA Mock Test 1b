First Unique Character in a String

Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

Example 1:
Input: s = "leetcode"
Output: 0

Example 2:
Input: s = "loveleetcode"
Output: 2

Example 3:
Input: s = "aabb"
Output: -1

Constraints:
a. 1 <= s.length <= 10^5
b. s consists of only lowercase English letters.


Python Code:

def firstUniqChar(s):
    if not (1 <= len(s) <= 10**5):
        print("Error: Invalid length of the string.")
      

    for char in s:
        if not ('a' <= char <= 'z'):
            print("Error: Invalid character in the string.")
            

    freq = {}

    for char in s:
        if char in freq:
            freq[char] += 1
        else:
            freq[char] = 1

    for i in range(len(s)):
        if freq[s[i]] == 1:
            return i

    return -1

s = "leetcode"
result = firstUniqChar(s)
print("Output:", result) # Output: 0

s = "loveleetcode"
result = firstUniqChar(s)
print("Output:", result) # Output: 2

s = "aabb"
result = firstUniqChar(s)
print("Output:", result) # Output: -1
